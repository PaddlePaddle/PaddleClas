# global configs
Global:
  checkpoints: null
  pretrained_model: "ram_plus.pdparams" # pretrain model for ram and ram plus, default random initilize
  output_dir: ./output/
  device: cpu
  save_interval: 1
  eval_during_train: True
  eval_interval: 1
  epochs: 120
  print_batch_step: 10
  use_visualdl: False
  # used for static mode and model export
  image_shape: [3, 384, 384]
  save_inference_dir: ./inference


# mixed precision
AMP:
  use_amp: True
  use_fp16_test: False
  scale_loss: 128.0
  use_dynamic_loss_scaling: True
  use_promote: False
  # O1: mixed fp16, O2: pure fp16
  level: O1


# model architecture
Arch:
  name: ram_plus
  vit: swin_l
  med_config: 'ppcls/configs/ram/RAM_bert.yaml'
  clip_pretraind: ./ViT-B-32.pdparams #for CLIP a necessary part for training ram
  stage: train
  image_size: 384
  vit_grad_ckpt: False
  vit_ckpt_layer: 0
  prompt: 'a picture of '
  threshold: 0.68
  delete_tag_index: []
  tag_list: 'ppcls/utils/ram/ram_tag_list.txt'
  tag_list_chinese: 'ppcls/utils/ram/ram_tag_list_chinese.txt'
  clip_version: 'vit-b-32-224'
  q2l_config: 'ppcls/configs/ram/RAM_q2l.yaml'
  ram_class_threshold_path: 'ppcls/utils/RAM/ram_tag_list_threshold.txt'
 
# loss function config for traing/eval process
Loss:
  Train:
    - RAMLoss:
        weight: 1.0
        mode: "pretrain"
  Eval:
    - RAMLoss:
        weight: 1.0
        mode: "pretrain"


Optimizer:
  name: AdamW
  beta1: 0.9
  beta2: 0.999
  epsilon: 1e-8
  weight_decay: 0.05
  layerwise_decay: 0.6
  filter_bias_and_bn: True
  lr:
    name: Cosine
    learning_rate: 0.0004
    eta_min: 1e-6
    warmup_epoch: 10
    warmup_start_lr: 5e-7


# data loader for train and eval
DataLoader:
  Train:
    dataset:
      name: RAMPretrainDataset
      ann_file: [./visual-genome/vg_ram.json]
      transform_ops_ram:
        - ResizeImage:
            size: 384
            interpolation: bicubic
            backend: pil
        - NormalizeImage:
            scale: 1.0/255.0
            mean: [0.485, 0.456, 0.406]
            std: [0.229, 0.224, 0.225]
            order: ''
        - ToCHWImage:
      transform_ops_clip:        
        - ResizeImage:
            resize_short: 224
            interpolation: bicubic
            backend: pil
        - NormalizeImage:
            scale: 1.0/255.0
            mean: [0.485, 0.456, 0.406]
            std: [0.229, 0.224, 0.225]
            order: ''
        - ToCHWImage:

    sampler:
      name: DistributedBatchSampler
      batch_size: 52
      drop_last: False
      shuffle: True
    loader:
      num_workers: 4
      use_shared_memory: True

  Eval:
    dataset: 
      name: RAMPretrainDataset
      ann_file: [./visual-genome/vg_ram.json]
      transform_ops_ram:
        - ResizeImage:
            size: 384
            interpolation: bicubic
            backend: pil
        - NormalizeImage:
            scale: 1.0/255.0
            mean: [0.485, 0.456, 0.406]
            std: [0.229, 0.224, 0.225]
            order: ''
        - ToCHWImage:
      transform_ops_clip:        
        - ResizeImage:
            resize_short: 224
            interpolation: bicubic
            backend: pil
        - NormalizeImage:
            scale: 1.0/255.0
            mean: [0.485, 0.456, 0.406]
            std: [0.229, 0.224, 0.225]
            order: ''
        - ToCHWImage:

    sampler:
      name: DistributedBatchSampler
      batch_size: 52
      drop_last: False
      shuffle: True
    loader:
      num_workers: 4
      use_shared_memory: True

Infer:
  infer_imgs: docs/images/inference_deployment/whl_demo.jpg
  batch_size: 1
  transforms:
    - DecodeImage:
        to_rgb: True
        channel_first: False
    - ResizeImage:
        resize_short: 384
    - CropImage:
        size: 384
    - NormalizeImage:
          scale: 1.0/255.0
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
          order: ''
    - ToCHWImage:
  PostProcess:
    name: RamOutPut
    language: "cn"
    tag_list: "ppcls/utils/RAM/ram_tag_list.txt"
    tag_list_chinese: "ppcls/utils/RAM/ram_tag_list_chinese.txt"
    ram_class_threshold_path: "ppcls/utils/RAM/ram_tag_list_threshold.txt"

